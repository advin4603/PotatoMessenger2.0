Server Side:
    ON CONNECTION
        1)Receive 16 byte fixed length header giving size of alias msg.
        2)Prepare to receive all bytes one at a time.
        3)Receive the alias.
        4)Receive request from client
        5)If request is 'r':
            5.1)Create client's view of all msg.
            5.2)Convert the view to JSON
            5.3)Send size of JSON as Bytes in a fixed length header of 64 bytes.
            5.4)Send JSON View in bytes
        6)If request is 's':
            6.1)Receive 64 byte fixed length header giving size of msg JSON.
            6.2)Prepare to receive all bytes one at a time.
            6.2)Receive the msg JSON.
            6.3)Update the global msg Dict and send 'S' for success if valid else 'F' for Fail.
        7)If request is 'q':
            7.1)Close connection
        8)If request is 'u':
            8.1)Receive 64 byte fixed length header giving size of fileName.
            8.2)Receive fileName byte-by-byte.
            8.3)Receive 64 byte fixed length header giving size of file.
            8.4)Create a file under dir with name that of the alias and the filename as provided.
            8.5)Receive fileChunk byte by byte and write it in file.
            8.6)Add new FilePath to driveInf dict as key and set value as a list containing user alias only and a string containing ctime().
        9)If request is 'd':
            9.1)Create list of all filePaths(Relative) that the user has access to.
            9.2)Send Size of that list in JSON Bytes in bytes as a 64byte header.
            9.2)Send the list.
        10)If request is 'l':
            10.1)Receive 64 byte header giving size of coming update.
            10.2)Prepare to receive the update dict.
            10.3)Receive the update dict.
            10.4)If valid update the dictionary, then sending S for success else F.
        11)If request is 'g':
            11.1)Receive a 64 byte header giving size of filePath.
            11.2)Receive the filePath.
            11.3)If user has access send 'S' else 'F'.
            11.4)If file exists send 'T' else 'N'.
            11.4)If 'T' and 'S' then send the fileSize in Bytes as 64Byte Fixed Length header.
            11.5)Send the file byte by byte.
        12)Else:
            12.1)If no msg received for 30 sec then close connection.